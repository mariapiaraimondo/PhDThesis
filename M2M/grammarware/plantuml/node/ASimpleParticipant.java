/* This file was generated by SableCC (http://www.sablecc.org/). */

package plantuml.node;

import plantuml.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleParticipant extends PParticipant
{
    private TParticipantTok _participantTok_;
    private TQuot _quot1_;
    private PParticipantName _participantName_;
    private TQuot _quot2_;
    private PPartAlias _partAlias_;
    private PStereotype _stereotype_;

    public ASimpleParticipant()
    {
        // Constructor
    }

    public ASimpleParticipant(
        @SuppressWarnings("hiding") TParticipantTok _participantTok_,
        @SuppressWarnings("hiding") TQuot _quot1_,
        @SuppressWarnings("hiding") PParticipantName _participantName_,
        @SuppressWarnings("hiding") TQuot _quot2_,
        @SuppressWarnings("hiding") PPartAlias _partAlias_,
        @SuppressWarnings("hiding") PStereotype _stereotype_)
    {
        // Constructor
        setParticipantTok(_participantTok_);

        setQuot1(_quot1_);

        setParticipantName(_participantName_);

        setQuot2(_quot2_);

        setPartAlias(_partAlias_);

        setStereotype(_stereotype_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleParticipant(
            cloneNode(this._participantTok_),
            cloneNode(this._quot1_),
            cloneNode(this._participantName_),
            cloneNode(this._quot2_),
            cloneNode(this._partAlias_),
            cloneNode(this._stereotype_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleParticipant(this);
    }

    public TParticipantTok getParticipantTok()
    {
        return this._participantTok_;
    }

    public void setParticipantTok(TParticipantTok node)
    {
        if(this._participantTok_ != null)
        {
            this._participantTok_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._participantTok_ = node;
    }

    public TQuot getQuot1()
    {
        return this._quot1_;
    }

    public void setQuot1(TQuot node)
    {
        if(this._quot1_ != null)
        {
            this._quot1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._quot1_ = node;
    }

    public PParticipantName getParticipantName()
    {
        return this._participantName_;
    }

    public void setParticipantName(PParticipantName node)
    {
        if(this._participantName_ != null)
        {
            this._participantName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._participantName_ = node;
    }

    public TQuot getQuot2()
    {
        return this._quot2_;
    }

    public void setQuot2(TQuot node)
    {
        if(this._quot2_ != null)
        {
            this._quot2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._quot2_ = node;
    }

    public PPartAlias getPartAlias()
    {
        return this._partAlias_;
    }

    public void setPartAlias(PPartAlias node)
    {
        if(this._partAlias_ != null)
        {
            this._partAlias_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._partAlias_ = node;
    }

    public PStereotype getStereotype()
    {
        return this._stereotype_;
    }

    public void setStereotype(PStereotype node)
    {
        if(this._stereotype_ != null)
        {
            this._stereotype_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stereotype_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._participantTok_)
            + toString(this._quot1_)
            + toString(this._participantName_)
            + toString(this._quot2_)
            + toString(this._partAlias_)
            + toString(this._stereotype_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._participantTok_ == child)
        {
            this._participantTok_ = null;
            return;
        }

        if(this._quot1_ == child)
        {
            this._quot1_ = null;
            return;
        }

        if(this._participantName_ == child)
        {
            this._participantName_ = null;
            return;
        }

        if(this._quot2_ == child)
        {
            this._quot2_ = null;
            return;
        }

        if(this._partAlias_ == child)
        {
            this._partAlias_ = null;
            return;
        }

        if(this._stereotype_ == child)
        {
            this._stereotype_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._participantTok_ == oldChild)
        {
            setParticipantTok((TParticipantTok) newChild);
            return;
        }

        if(this._quot1_ == oldChild)
        {
            setQuot1((TQuot) newChild);
            return;
        }

        if(this._participantName_ == oldChild)
        {
            setParticipantName((PParticipantName) newChild);
            return;
        }

        if(this._quot2_ == oldChild)
        {
            setQuot2((TQuot) newChild);
            return;
        }

        if(this._partAlias_ == oldChild)
        {
            setPartAlias((PPartAlias) newChild);
            return;
        }

        if(this._stereotype_ == oldChild)
        {
            setStereotype((PStereotype) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
