/* This file was generated by SableCC (http://www.sablecc.org/). */

package plantuml.node;

import plantuml.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleMessageNote extends PMessageNote
{
    private TNoteTok _starting_;
    private PPosition _position_;
    private PAliasNoteBlock _aliasNoteBlock_;
    private TNewLine _firstline_;
    private PContent _content_;
    private TNewLine _secondline_;
    private TEndTok _endTok_;
    private TNoteTok _ending_;

    public ASimpleMessageNote()
    {
        // Constructor
    }

    public ASimpleMessageNote(
        @SuppressWarnings("hiding") TNoteTok _starting_,
        @SuppressWarnings("hiding") PPosition _position_,
        @SuppressWarnings("hiding") PAliasNoteBlock _aliasNoteBlock_,
        @SuppressWarnings("hiding") TNewLine _firstline_,
        @SuppressWarnings("hiding") PContent _content_,
        @SuppressWarnings("hiding") TNewLine _secondline_,
        @SuppressWarnings("hiding") TEndTok _endTok_,
        @SuppressWarnings("hiding") TNoteTok _ending_)
    {
        // Constructor
        setStarting(_starting_);

        setPosition(_position_);

        setAliasNoteBlock(_aliasNoteBlock_);

        setFirstline(_firstline_);

        setContent(_content_);

        setSecondline(_secondline_);

        setEndTok(_endTok_);

        setEnding(_ending_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleMessageNote(
            cloneNode(this._starting_),
            cloneNode(this._position_),
            cloneNode(this._aliasNoteBlock_),
            cloneNode(this._firstline_),
            cloneNode(this._content_),
            cloneNode(this._secondline_),
            cloneNode(this._endTok_),
            cloneNode(this._ending_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleMessageNote(this);
    }

    public TNoteTok getStarting()
    {
        return this._starting_;
    }

    public void setStarting(TNoteTok node)
    {
        if(this._starting_ != null)
        {
            this._starting_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._starting_ = node;
    }

    public PPosition getPosition()
    {
        return this._position_;
    }

    public void setPosition(PPosition node)
    {
        if(this._position_ != null)
        {
            this._position_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._position_ = node;
    }

    public PAliasNoteBlock getAliasNoteBlock()
    {
        return this._aliasNoteBlock_;
    }

    public void setAliasNoteBlock(PAliasNoteBlock node)
    {
        if(this._aliasNoteBlock_ != null)
        {
            this._aliasNoteBlock_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aliasNoteBlock_ = node;
    }

    public TNewLine getFirstline()
    {
        return this._firstline_;
    }

    public void setFirstline(TNewLine node)
    {
        if(this._firstline_ != null)
        {
            this._firstline_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._firstline_ = node;
    }

    public PContent getContent()
    {
        return this._content_;
    }

    public void setContent(PContent node)
    {
        if(this._content_ != null)
        {
            this._content_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._content_ = node;
    }

    public TNewLine getSecondline()
    {
        return this._secondline_;
    }

    public void setSecondline(TNewLine node)
    {
        if(this._secondline_ != null)
        {
            this._secondline_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._secondline_ = node;
    }

    public TEndTok getEndTok()
    {
        return this._endTok_;
    }

    public void setEndTok(TEndTok node)
    {
        if(this._endTok_ != null)
        {
            this._endTok_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._endTok_ = node;
    }

    public TNoteTok getEnding()
    {
        return this._ending_;
    }

    public void setEnding(TNoteTok node)
    {
        if(this._ending_ != null)
        {
            this._ending_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ending_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._starting_)
            + toString(this._position_)
            + toString(this._aliasNoteBlock_)
            + toString(this._firstline_)
            + toString(this._content_)
            + toString(this._secondline_)
            + toString(this._endTok_)
            + toString(this._ending_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._starting_ == child)
        {
            this._starting_ = null;
            return;
        }

        if(this._position_ == child)
        {
            this._position_ = null;
            return;
        }

        if(this._aliasNoteBlock_ == child)
        {
            this._aliasNoteBlock_ = null;
            return;
        }

        if(this._firstline_ == child)
        {
            this._firstline_ = null;
            return;
        }

        if(this._content_ == child)
        {
            this._content_ = null;
            return;
        }

        if(this._secondline_ == child)
        {
            this._secondline_ = null;
            return;
        }

        if(this._endTok_ == child)
        {
            this._endTok_ = null;
            return;
        }

        if(this._ending_ == child)
        {
            this._ending_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._starting_ == oldChild)
        {
            setStarting((TNoteTok) newChild);
            return;
        }

        if(this._position_ == oldChild)
        {
            setPosition((PPosition) newChild);
            return;
        }

        if(this._aliasNoteBlock_ == oldChild)
        {
            setAliasNoteBlock((PAliasNoteBlock) newChild);
            return;
        }

        if(this._firstline_ == oldChild)
        {
            setFirstline((TNewLine) newChild);
            return;
        }

        if(this._content_ == oldChild)
        {
            setContent((PContent) newChild);
            return;
        }

        if(this._secondline_ == oldChild)
        {
            setSecondline((TNewLine) newChild);
            return;
        }

        if(this._endTok_ == oldChild)
        {
            setEndTok((TEndTok) newChild);
            return;
        }

        if(this._ending_ == oldChild)
        {
            setEnding((TNoteTok) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
