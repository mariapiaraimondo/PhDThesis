/* This file was generated by SableCC (http://www.sablecc.org/). */

package plantuml.node;

import plantuml.analysis.*;

@SuppressWarnings("nls")
public final class AMsgItemCore extends PItemCore
{
    private PMessage _message_;

    public AMsgItemCore()
    {
        // Constructor
    }

    public AMsgItemCore(
        @SuppressWarnings("hiding") PMessage _message_)
    {
        // Constructor
        setMessage(_message_);

    }

    @Override
    public Object clone()
    {
        return new AMsgItemCore(
            cloneNode(this._message_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMsgItemCore(this);
    }

    public PMessage getMessage()
    {
        return this._message_;
    }

    public void setMessage(PMessage node)
    {
        if(this._message_ != null)
        {
            this._message_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._message_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._message_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._message_ == child)
        {
            this._message_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._message_ == oldChild)
        {
            setMessage((PMessage) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
