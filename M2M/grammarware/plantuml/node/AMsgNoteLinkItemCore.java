/* This file was generated by SableCC (http://www.sablecc.org/). */

package plantuml.node;

import plantuml.analysis.*;

@SuppressWarnings("nls")
public final class AMsgNoteLinkItemCore extends PItemCore
{
    private PMsgnoteLink _msgnoteLink_;

    public AMsgNoteLinkItemCore()
    {
        // Constructor
    }

    public AMsgNoteLinkItemCore(
        @SuppressWarnings("hiding") PMsgnoteLink _msgnoteLink_)
    {
        // Constructor
        setMsgnoteLink(_msgnoteLink_);

    }

    @Override
    public Object clone()
    {
        return new AMsgNoteLinkItemCore(
            cloneNode(this._msgnoteLink_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMsgNoteLinkItemCore(this);
    }

    public PMsgnoteLink getMsgnoteLink()
    {
        return this._msgnoteLink_;
    }

    public void setMsgnoteLink(PMsgnoteLink node)
    {
        if(this._msgnoteLink_ != null)
        {
            this._msgnoteLink_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._msgnoteLink_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._msgnoteLink_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._msgnoteLink_ == child)
        {
            this._msgnoteLink_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._msgnoteLink_ == oldChild)
        {
            setMsgnoteLink((PMsgnoteLink) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
