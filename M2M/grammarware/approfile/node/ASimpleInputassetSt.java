/* This file was generated by SableCC (http://www.sablecc.org/). */

package approfile.node;

import approfile.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleInputassetSt extends PInputassetSt
{
    private TInputassetStereotype _inputassetStereotype_;
    private PAssetRef _assetRef_;
    private TOpenCurly _openCurly_;
    private PDataClause _dataClause_;
    private PProvenanceAddClause _provenanceAddClause_;
    private TCloseCurly _closeCurly_;

    public ASimpleInputassetSt()
    {
        // Constructor
    }

    public ASimpleInputassetSt(
        @SuppressWarnings("hiding") TInputassetStereotype _inputassetStereotype_,
        @SuppressWarnings("hiding") PAssetRef _assetRef_,
        @SuppressWarnings("hiding") TOpenCurly _openCurly_,
        @SuppressWarnings("hiding") PDataClause _dataClause_,
        @SuppressWarnings("hiding") PProvenanceAddClause _provenanceAddClause_,
        @SuppressWarnings("hiding") TCloseCurly _closeCurly_)
    {
        // Constructor
        setInputassetStereotype(_inputassetStereotype_);

        setAssetRef(_assetRef_);

        setOpenCurly(_openCurly_);

        setDataClause(_dataClause_);

        setProvenanceAddClause(_provenanceAddClause_);

        setCloseCurly(_closeCurly_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleInputassetSt(
            cloneNode(this._inputassetStereotype_),
            cloneNode(this._assetRef_),
            cloneNode(this._openCurly_),
            cloneNode(this._dataClause_),
            cloneNode(this._provenanceAddClause_),
            cloneNode(this._closeCurly_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleInputassetSt(this);
    }

    public TInputassetStereotype getInputassetStereotype()
    {
        return this._inputassetStereotype_;
    }

    public void setInputassetStereotype(TInputassetStereotype node)
    {
        if(this._inputassetStereotype_ != null)
        {
            this._inputassetStereotype_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inputassetStereotype_ = node;
    }

    public PAssetRef getAssetRef()
    {
        return this._assetRef_;
    }

    public void setAssetRef(PAssetRef node)
    {
        if(this._assetRef_ != null)
        {
            this._assetRef_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._assetRef_ = node;
    }

    public TOpenCurly getOpenCurly()
    {
        return this._openCurly_;
    }

    public void setOpenCurly(TOpenCurly node)
    {
        if(this._openCurly_ != null)
        {
            this._openCurly_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._openCurly_ = node;
    }

    public PDataClause getDataClause()
    {
        return this._dataClause_;
    }

    public void setDataClause(PDataClause node)
    {
        if(this._dataClause_ != null)
        {
            this._dataClause_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dataClause_ = node;
    }

    public PProvenanceAddClause getProvenanceAddClause()
    {
        return this._provenanceAddClause_;
    }

    public void setProvenanceAddClause(PProvenanceAddClause node)
    {
        if(this._provenanceAddClause_ != null)
        {
            this._provenanceAddClause_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._provenanceAddClause_ = node;
    }

    public TCloseCurly getCloseCurly()
    {
        return this._closeCurly_;
    }

    public void setCloseCurly(TCloseCurly node)
    {
        if(this._closeCurly_ != null)
        {
            this._closeCurly_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._closeCurly_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._inputassetStereotype_)
            + toString(this._assetRef_)
            + toString(this._openCurly_)
            + toString(this._dataClause_)
            + toString(this._provenanceAddClause_)
            + toString(this._closeCurly_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._inputassetStereotype_ == child)
        {
            this._inputassetStereotype_ = null;
            return;
        }

        if(this._assetRef_ == child)
        {
            this._assetRef_ = null;
            return;
        }

        if(this._openCurly_ == child)
        {
            this._openCurly_ = null;
            return;
        }

        if(this._dataClause_ == child)
        {
            this._dataClause_ = null;
            return;
        }

        if(this._provenanceAddClause_ == child)
        {
            this._provenanceAddClause_ = null;
            return;
        }

        if(this._closeCurly_ == child)
        {
            this._closeCurly_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._inputassetStereotype_ == oldChild)
        {
            setInputassetStereotype((TInputassetStereotype) newChild);
            return;
        }

        if(this._assetRef_ == oldChild)
        {
            setAssetRef((PAssetRef) newChild);
            return;
        }

        if(this._openCurly_ == oldChild)
        {
            setOpenCurly((TOpenCurly) newChild);
            return;
        }

        if(this._dataClause_ == oldChild)
        {
            setDataClause((PDataClause) newChild);
            return;
        }

        if(this._provenanceAddClause_ == oldChild)
        {
            setProvenanceAddClause((PProvenanceAddClause) newChild);
            return;
        }

        if(this._closeCurly_ == oldChild)
        {
            setCloseCurly((TCloseCurly) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
