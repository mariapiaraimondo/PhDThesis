/* This file was generated by SableCC (http://www.sablecc.org/). */

package approfile.node;

import approfile.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleTransactions extends PTransactions
{
    private TTransactionTaggedtok _transactionTaggedtok_;
    private TEquals _equals_;
    private TOpenCurly _openCurly_;
    private PTransactionList _transactionList_;
    private TCloseCurly _closeCurly_;

    public ASimpleTransactions()
    {
        // Constructor
    }

    public ASimpleTransactions(
        @SuppressWarnings("hiding") TTransactionTaggedtok _transactionTaggedtok_,
        @SuppressWarnings("hiding") TEquals _equals_,
        @SuppressWarnings("hiding") TOpenCurly _openCurly_,
        @SuppressWarnings("hiding") PTransactionList _transactionList_,
        @SuppressWarnings("hiding") TCloseCurly _closeCurly_)
    {
        // Constructor
        setTransactionTaggedtok(_transactionTaggedtok_);

        setEquals(_equals_);

        setOpenCurly(_openCurly_);

        setTransactionList(_transactionList_);

        setCloseCurly(_closeCurly_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleTransactions(
            cloneNode(this._transactionTaggedtok_),
            cloneNode(this._equals_),
            cloneNode(this._openCurly_),
            cloneNode(this._transactionList_),
            cloneNode(this._closeCurly_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleTransactions(this);
    }

    public TTransactionTaggedtok getTransactionTaggedtok()
    {
        return this._transactionTaggedtok_;
    }

    public void setTransactionTaggedtok(TTransactionTaggedtok node)
    {
        if(this._transactionTaggedtok_ != null)
        {
            this._transactionTaggedtok_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._transactionTaggedtok_ = node;
    }

    public TEquals getEquals()
    {
        return this._equals_;
    }

    public void setEquals(TEquals node)
    {
        if(this._equals_ != null)
        {
            this._equals_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._equals_ = node;
    }

    public TOpenCurly getOpenCurly()
    {
        return this._openCurly_;
    }

    public void setOpenCurly(TOpenCurly node)
    {
        if(this._openCurly_ != null)
        {
            this._openCurly_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._openCurly_ = node;
    }

    public PTransactionList getTransactionList()
    {
        return this._transactionList_;
    }

    public void setTransactionList(PTransactionList node)
    {
        if(this._transactionList_ != null)
        {
            this._transactionList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._transactionList_ = node;
    }

    public TCloseCurly getCloseCurly()
    {
        return this._closeCurly_;
    }

    public void setCloseCurly(TCloseCurly node)
    {
        if(this._closeCurly_ != null)
        {
            this._closeCurly_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._closeCurly_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._transactionTaggedtok_)
            + toString(this._equals_)
            + toString(this._openCurly_)
            + toString(this._transactionList_)
            + toString(this._closeCurly_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._transactionTaggedtok_ == child)
        {
            this._transactionTaggedtok_ = null;
            return;
        }

        if(this._equals_ == child)
        {
            this._equals_ = null;
            return;
        }

        if(this._openCurly_ == child)
        {
            this._openCurly_ = null;
            return;
        }

        if(this._transactionList_ == child)
        {
            this._transactionList_ = null;
            return;
        }

        if(this._closeCurly_ == child)
        {
            this._closeCurly_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._transactionTaggedtok_ == oldChild)
        {
            setTransactionTaggedtok((TTransactionTaggedtok) newChild);
            return;
        }

        if(this._equals_ == oldChild)
        {
            setEquals((TEquals) newChild);
            return;
        }

        if(this._openCurly_ == oldChild)
        {
            setOpenCurly((TOpenCurly) newChild);
            return;
        }

        if(this._transactionList_ == oldChild)
        {
            setTransactionList((PTransactionList) newChild);
            return;
        }

        if(this._closeCurly_ == oldChild)
        {
            setCloseCurly((TCloseCurly) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
