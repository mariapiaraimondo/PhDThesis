/* This file was generated by SableCC (http://www.sablecc.org/). */

package approfile.node;

import approfile.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleDataClause extends PDataClause
{
    private TDataTaggedtok _dataTaggedtok_;
    private TEquals _equals_;
    private PDataPayload _dataPayload_;

    public ASimpleDataClause()
    {
        // Constructor
    }

    public ASimpleDataClause(
        @SuppressWarnings("hiding") TDataTaggedtok _dataTaggedtok_,
        @SuppressWarnings("hiding") TEquals _equals_,
        @SuppressWarnings("hiding") PDataPayload _dataPayload_)
    {
        // Constructor
        setDataTaggedtok(_dataTaggedtok_);

        setEquals(_equals_);

        setDataPayload(_dataPayload_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleDataClause(
            cloneNode(this._dataTaggedtok_),
            cloneNode(this._equals_),
            cloneNode(this._dataPayload_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleDataClause(this);
    }

    public TDataTaggedtok getDataTaggedtok()
    {
        return this._dataTaggedtok_;
    }

    public void setDataTaggedtok(TDataTaggedtok node)
    {
        if(this._dataTaggedtok_ != null)
        {
            this._dataTaggedtok_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dataTaggedtok_ = node;
    }

    public TEquals getEquals()
    {
        return this._equals_;
    }

    public void setEquals(TEquals node)
    {
        if(this._equals_ != null)
        {
            this._equals_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._equals_ = node;
    }

    public PDataPayload getDataPayload()
    {
        return this._dataPayload_;
    }

    public void setDataPayload(PDataPayload node)
    {
        if(this._dataPayload_ != null)
        {
            this._dataPayload_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dataPayload_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._dataTaggedtok_)
            + toString(this._equals_)
            + toString(this._dataPayload_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._dataTaggedtok_ == child)
        {
            this._dataTaggedtok_ = null;
            return;
        }

        if(this._equals_ == child)
        {
            this._equals_ = null;
            return;
        }

        if(this._dataPayload_ == child)
        {
            this._dataPayload_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._dataTaggedtok_ == oldChild)
        {
            setDataTaggedtok((TDataTaggedtok) newChild);
            return;
        }

        if(this._equals_ == oldChild)
        {
            setEquals((TEquals) newChild);
            return;
        }

        if(this._dataPayload_ == oldChild)
        {
            setDataPayload((PDataPayload) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
