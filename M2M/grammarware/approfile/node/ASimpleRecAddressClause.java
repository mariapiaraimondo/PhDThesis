/* This file was generated by SableCC (http://www.sablecc.org/). */

package approfile.node;

import approfile.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleRecAddressClause extends PRecAddressClause
{
    private TReceiverTaggedtok _receiverTaggedtok_;
    private TEquals _equals_;
    private PParticipantRef _participantRef_;

    public ASimpleRecAddressClause()
    {
        // Constructor
    }

    public ASimpleRecAddressClause(
        @SuppressWarnings("hiding") TReceiverTaggedtok _receiverTaggedtok_,
        @SuppressWarnings("hiding") TEquals _equals_,
        @SuppressWarnings("hiding") PParticipantRef _participantRef_)
    {
        // Constructor
        setReceiverTaggedtok(_receiverTaggedtok_);

        setEquals(_equals_);

        setParticipantRef(_participantRef_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleRecAddressClause(
            cloneNode(this._receiverTaggedtok_),
            cloneNode(this._equals_),
            cloneNode(this._participantRef_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleRecAddressClause(this);
    }

    public TReceiverTaggedtok getReceiverTaggedtok()
    {
        return this._receiverTaggedtok_;
    }

    public void setReceiverTaggedtok(TReceiverTaggedtok node)
    {
        if(this._receiverTaggedtok_ != null)
        {
            this._receiverTaggedtok_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._receiverTaggedtok_ = node;
    }

    public TEquals getEquals()
    {
        return this._equals_;
    }

    public void setEquals(TEquals node)
    {
        if(this._equals_ != null)
        {
            this._equals_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._equals_ = node;
    }

    public PParticipantRef getParticipantRef()
    {
        return this._participantRef_;
    }

    public void setParticipantRef(PParticipantRef node)
    {
        if(this._participantRef_ != null)
        {
            this._participantRef_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._participantRef_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._receiverTaggedtok_)
            + toString(this._equals_)
            + toString(this._participantRef_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._receiverTaggedtok_ == child)
        {
            this._receiverTaggedtok_ = null;
            return;
        }

        if(this._equals_ == child)
        {
            this._equals_ = null;
            return;
        }

        if(this._participantRef_ == child)
        {
            this._participantRef_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._receiverTaggedtok_ == oldChild)
        {
            setReceiverTaggedtok((TReceiverTaggedtok) newChild);
            return;
        }

        if(this._equals_ == oldChild)
        {
            setEquals((TEquals) newChild);
            return;
        }

        if(this._participantRef_ == oldChild)
        {
            setParticipantRef((PParticipantRef) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
