/* This file was generated by SableCC (http://www.sablecc.org/). */

package approfile.node;

import approfile.analysis.*;

@SuppressWarnings("nls")
public final class AListInassetsList extends PInassetsList
{
    private PInputAssetName _inputAssetName_;
    private TComma _comma_;
    private PInassetsList _inassetsList_;

    public AListInassetsList()
    {
        // Constructor
    }

    public AListInassetsList(
        @SuppressWarnings("hiding") PInputAssetName _inputAssetName_,
        @SuppressWarnings("hiding") TComma _comma_,
        @SuppressWarnings("hiding") PInassetsList _inassetsList_)
    {
        // Constructor
        setInputAssetName(_inputAssetName_);

        setComma(_comma_);

        setInassetsList(_inassetsList_);

    }

    @Override
    public Object clone()
    {
        return new AListInassetsList(
            cloneNode(this._inputAssetName_),
            cloneNode(this._comma_),
            cloneNode(this._inassetsList_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListInassetsList(this);
    }

    public PInputAssetName getInputAssetName()
    {
        return this._inputAssetName_;
    }

    public void setInputAssetName(PInputAssetName node)
    {
        if(this._inputAssetName_ != null)
        {
            this._inputAssetName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inputAssetName_ = node;
    }

    public TComma getComma()
    {
        return this._comma_;
    }

    public void setComma(TComma node)
    {
        if(this._comma_ != null)
        {
            this._comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comma_ = node;
    }

    public PInassetsList getInassetsList()
    {
        return this._inassetsList_;
    }

    public void setInassetsList(PInassetsList node)
    {
        if(this._inassetsList_ != null)
        {
            this._inassetsList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inassetsList_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._inputAssetName_)
            + toString(this._comma_)
            + toString(this._inassetsList_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._inputAssetName_ == child)
        {
            this._inputAssetName_ = null;
            return;
        }

        if(this._comma_ == child)
        {
            this._comma_ = null;
            return;
        }

        if(this._inassetsList_ == child)
        {
            this._inassetsList_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._inputAssetName_ == oldChild)
        {
            setInputAssetName((PInputAssetName) newChild);
            return;
        }

        if(this._comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(this._inassetsList_ == oldChild)
        {
            setInassetsList((PInassetsList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
