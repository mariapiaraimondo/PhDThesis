/* This file was generated by SableCC (http://www.sablecc.org/). */

package approfile.node;

import approfile.analysis.*;

@SuppressWarnings("nls")
public final class AListOutassetsList extends POutassetsList
{
    private POutputAssetName _outputAssetName_;
    private TComma _comma_;
    private POutassetsList _outassetsList_;

    public AListOutassetsList()
    {
        // Constructor
    }

    public AListOutassetsList(
        @SuppressWarnings("hiding") POutputAssetName _outputAssetName_,
        @SuppressWarnings("hiding") TComma _comma_,
        @SuppressWarnings("hiding") POutassetsList _outassetsList_)
    {
        // Constructor
        setOutputAssetName(_outputAssetName_);

        setComma(_comma_);

        setOutassetsList(_outassetsList_);

    }

    @Override
    public Object clone()
    {
        return new AListOutassetsList(
            cloneNode(this._outputAssetName_),
            cloneNode(this._comma_),
            cloneNode(this._outassetsList_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListOutassetsList(this);
    }

    public POutputAssetName getOutputAssetName()
    {
        return this._outputAssetName_;
    }

    public void setOutputAssetName(POutputAssetName node)
    {
        if(this._outputAssetName_ != null)
        {
            this._outputAssetName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._outputAssetName_ = node;
    }

    public TComma getComma()
    {
        return this._comma_;
    }

    public void setComma(TComma node)
    {
        if(this._comma_ != null)
        {
            this._comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comma_ = node;
    }

    public POutassetsList getOutassetsList()
    {
        return this._outassetsList_;
    }

    public void setOutassetsList(POutassetsList node)
    {
        if(this._outassetsList_ != null)
        {
            this._outassetsList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._outassetsList_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._outputAssetName_)
            + toString(this._comma_)
            + toString(this._outassetsList_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._outputAssetName_ == child)
        {
            this._outputAssetName_ = null;
            return;
        }

        if(this._comma_ == child)
        {
            this._comma_ = null;
            return;
        }

        if(this._outassetsList_ == child)
        {
            this._outassetsList_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._outputAssetName_ == oldChild)
        {
            setOutputAssetName((POutputAssetName) newChild);
            return;
        }

        if(this._comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(this._outassetsList_ == oldChild)
        {
            setOutassetsList((POutassetsList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
