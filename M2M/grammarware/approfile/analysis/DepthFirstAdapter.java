/* This file was generated by SableCC (http://www.sablecc.org/). */

package approfile.analysis;

import java.util.*;
import approfile.node.*;

public class DepthFirstAdapter extends AnalysisAdapter
{
    public void inStart(Start node)
    {
        defaultIn(node);
    }

    public void outStart(Start node)
    {
        defaultOut(node);
    }

    public void defaultIn(@SuppressWarnings("unused") Node node)
    {
        // Do nothing
    }

    public void defaultOut(@SuppressWarnings("unused") Node node)
    {
        // Do nothing
    }

    @Override
    public void caseStart(Start node)
    {
        inStart(node);
        node.getPStereotype().apply(this);
        node.getEOF().apply(this);
        outStart(node);
    }

    public void inAParticipantStereotype(AParticipantStereotype node)
    {
        defaultIn(node);
    }

    public void outAParticipantStereotype(AParticipantStereotype node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAParticipantStereotype(AParticipantStereotype node)
    {
        inAParticipantStereotype(node);
        if(node.getParticipantSt() != null)
        {
            node.getParticipantSt().apply(this);
        }
        outAParticipantStereotype(node);
    }

    public void inAInputStereotype(AInputStereotype node)
    {
        defaultIn(node);
    }

    public void outAInputStereotype(AInputStereotype node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAInputStereotype(AInputStereotype node)
    {
        inAInputStereotype(node);
        if(node.getInputassetSt() != null)
        {
            node.getInputassetSt().apply(this);
        }
        outAInputStereotype(node);
    }

    public void inAOutputStereotype(AOutputStereotype node)
    {
        defaultIn(node);
    }

    public void outAOutputStereotype(AOutputStereotype node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAOutputStereotype(AOutputStereotype node)
    {
        inAOutputStereotype(node);
        if(node.getOutputassetSt() != null)
        {
            node.getOutputassetSt().apply(this);
        }
        outAOutputStereotype(node);
    }

    public void inASimpleParticipantSt(ASimpleParticipantSt node)
    {
        defaultIn(node);
    }

    public void outASimpleParticipantSt(ASimpleParticipantSt node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleParticipantSt(ASimpleParticipantSt node)
    {
        inASimpleParticipantSt(node);
        if(node.getParticipantStereotype() != null)
        {
            node.getParticipantStereotype().apply(this);
        }
        if(node.getTransactions() != null)
        {
            node.getTransactions().apply(this);
        }
        outASimpleParticipantSt(node);
    }

    public void inASimpleTransactions(ASimpleTransactions node)
    {
        defaultIn(node);
    }

    public void outASimpleTransactions(ASimpleTransactions node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleTransactions(ASimpleTransactions node)
    {
        inASimpleTransactions(node);
        if(node.getTransactionTaggedtok() != null)
        {
            node.getTransactionTaggedtok().apply(this);
        }
        if(node.getEquals() != null)
        {
            node.getEquals().apply(this);
        }
        if(node.getOpenCurly() != null)
        {
            node.getOpenCurly().apply(this);
        }
        if(node.getTransactionList() != null)
        {
            node.getTransactionList().apply(this);
        }
        if(node.getCloseCurly() != null)
        {
            node.getCloseCurly().apply(this);
        }
        outASimpleTransactions(node);
    }

    public void inASimpleTransactionList(ASimpleTransactionList node)
    {
        defaultIn(node);
    }

    public void outASimpleTransactionList(ASimpleTransactionList node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleTransactionList(ASimpleTransactionList node)
    {
        inASimpleTransactionList(node);
        if(node.getTransaction() != null)
        {
            node.getTransaction().apply(this);
        }
        outASimpleTransactionList(node);
    }

    public void inAListTransactionList(AListTransactionList node)
    {
        defaultIn(node);
    }

    public void outAListTransactionList(AListTransactionList node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAListTransactionList(AListTransactionList node)
    {
        inAListTransactionList(node);
        if(node.getTransaction() != null)
        {
            node.getTransaction().apply(this);
        }
        if(node.getComma() != null)
        {
            node.getComma().apply(this);
        }
        if(node.getTransactionList() != null)
        {
            node.getTransactionList().apply(this);
        }
        outAListTransactionList(node);
    }

    public void inASimpleTransaction(ASimpleTransaction node)
    {
        defaultIn(node);
    }

    public void outASimpleTransaction(ASimpleTransaction node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleTransaction(ASimpleTransaction node)
    {
        inASimpleTransaction(node);
        if(node.getOpenRound() != null)
        {
            node.getOpenRound().apply(this);
        }
        if(node.getIdClause() != null)
        {
            node.getIdClause().apply(this);
        }
        if(node.getC0() != null)
        {
            node.getC0().apply(this);
        }
        if(node.getPubkeyClause() != null)
        {
            node.getPubkeyClause().apply(this);
        }
        if(node.getC1() != null)
        {
            node.getC1().apply(this);
        }
        if(node.getSendaddClause() != null)
        {
            node.getSendaddClause().apply(this);
        }
        if(node.getC2() != null)
        {
            node.getC2().apply(this);
        }
        if(node.getDigitalsigClause() != null)
        {
            node.getDigitalsigClause().apply(this);
        }
        if(node.getC3() != null)
        {
            node.getC3().apply(this);
        }
        if(node.getInputAssetsClause() != null)
        {
            node.getInputAssetsClause().apply(this);
        }
        if(node.getC4() != null)
        {
            node.getC4().apply(this);
        }
        if(node.getOutputAssetsClause() != null)
        {
            node.getOutputAssetsClause().apply(this);
        }
        if(node.getCloseRound() != null)
        {
            node.getCloseRound().apply(this);
        }
        outASimpleTransaction(node);
    }

    public void inASimpleIdClause(ASimpleIdClause node)
    {
        defaultIn(node);
    }

    public void outASimpleIdClause(ASimpleIdClause node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleIdClause(ASimpleIdClause node)
    {
        inASimpleIdClause(node);
        if(node.getIdTaggedtok() != null)
        {
            node.getIdTaggedtok().apply(this);
        }
        if(node.getEquals() != null)
        {
            node.getEquals().apply(this);
        }
        if(node.getIdName() != null)
        {
            node.getIdName().apply(this);
        }
        outASimpleIdClause(node);
    }

    public void inASimplePubkeyClause(ASimplePubkeyClause node)
    {
        defaultIn(node);
    }

    public void outASimplePubkeyClause(ASimplePubkeyClause node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimplePubkeyClause(ASimplePubkeyClause node)
    {
        inASimplePubkeyClause(node);
        if(node.getSenderpubkeyTaggedtok() != null)
        {
            node.getSenderpubkeyTaggedtok().apply(this);
        }
        if(node.getEquals() != null)
        {
            node.getEquals().apply(this);
        }
        if(node.getSenderpubkeyName() != null)
        {
            node.getSenderpubkeyName().apply(this);
        }
        outASimplePubkeyClause(node);
    }

    public void inASimpleSendaddClause(ASimpleSendaddClause node)
    {
        defaultIn(node);
    }

    public void outASimpleSendaddClause(ASimpleSendaddClause node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleSendaddClause(ASimpleSendaddClause node)
    {
        inASimpleSendaddClause(node);
        if(node.getSenderaddressTaggedtok() != null)
        {
            node.getSenderaddressTaggedtok().apply(this);
        }
        if(node.getEquals() != null)
        {
            node.getEquals().apply(this);
        }
        if(node.getSenderaddressName() != null)
        {
            node.getSenderaddressName().apply(this);
        }
        outASimpleSendaddClause(node);
    }

    public void inASimpleDigitalsigClause(ASimpleDigitalsigClause node)
    {
        defaultIn(node);
    }

    public void outASimpleDigitalsigClause(ASimpleDigitalsigClause node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleDigitalsigClause(ASimpleDigitalsigClause node)
    {
        inASimpleDigitalsigClause(node);
        if(node.getDigitalsignatureTaggedtok() != null)
        {
            node.getDigitalsignatureTaggedtok().apply(this);
        }
        if(node.getEquals() != null)
        {
            node.getEquals().apply(this);
        }
        if(node.getDigitalsignatureName() != null)
        {
            node.getDigitalsignatureName().apply(this);
        }
        outASimpleDigitalsigClause(node);
    }

    public void inASimpleInputAssetsClause(ASimpleInputAssetsClause node)
    {
        defaultIn(node);
    }

    public void outASimpleInputAssetsClause(ASimpleInputAssetsClause node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleInputAssetsClause(ASimpleInputAssetsClause node)
    {
        inASimpleInputAssetsClause(node);
        if(node.getInputassetsTaggedtok() != null)
        {
            node.getInputassetsTaggedtok().apply(this);
        }
        if(node.getEquals() != null)
        {
            node.getEquals().apply(this);
        }
        if(node.getCo() != null)
        {
            node.getCo().apply(this);
        }
        if(node.getInassetsList() != null)
        {
            node.getInassetsList().apply(this);
        }
        if(node.getCc() != null)
        {
            node.getCc().apply(this);
        }
        outASimpleInputAssetsClause(node);
    }

    public void inASimpleOutputAssetsClause(ASimpleOutputAssetsClause node)
    {
        defaultIn(node);
    }

    public void outASimpleOutputAssetsClause(ASimpleOutputAssetsClause node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleOutputAssetsClause(ASimpleOutputAssetsClause node)
    {
        inASimpleOutputAssetsClause(node);
        if(node.getOutputassetsTaggedtok() != null)
        {
            node.getOutputassetsTaggedtok().apply(this);
        }
        if(node.getEquals() != null)
        {
            node.getEquals().apply(this);
        }
        if(node.getCo() != null)
        {
            node.getCo().apply(this);
        }
        if(node.getOutassetsList() != null)
        {
            node.getOutassetsList().apply(this);
        }
        if(node.getCc() != null)
        {
            node.getCc().apply(this);
        }
        outASimpleOutputAssetsClause(node);
    }

    public void inASimpleIdName(ASimpleIdName node)
    {
        defaultIn(node);
    }

    public void outASimpleIdName(ASimpleIdName node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleIdName(ASimpleIdName node)
    {
        inASimpleIdName(node);
        if(node.getName() != null)
        {
            node.getName().apply(this);
        }
        outASimpleIdName(node);
    }

    public void inAFuncIdName(AFuncIdName node)
    {
        defaultIn(node);
    }

    public void outAFuncIdName(AFuncIdName node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAFuncIdName(AFuncIdName node)
    {
        inAFuncIdName(node);
        if(node.getFuncName() != null)
        {
            node.getFuncName().apply(this);
        }
        outAFuncIdName(node);
    }

    public void inASimpleSenderpubkeyName(ASimpleSenderpubkeyName node)
    {
        defaultIn(node);
    }

    public void outASimpleSenderpubkeyName(ASimpleSenderpubkeyName node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleSenderpubkeyName(ASimpleSenderpubkeyName node)
    {
        inASimpleSenderpubkeyName(node);
        if(node.getName() != null)
        {
            node.getName().apply(this);
        }
        outASimpleSenderpubkeyName(node);
    }

    public void inAFuncSenderpubkeyName(AFuncSenderpubkeyName node)
    {
        defaultIn(node);
    }

    public void outAFuncSenderpubkeyName(AFuncSenderpubkeyName node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAFuncSenderpubkeyName(AFuncSenderpubkeyName node)
    {
        inAFuncSenderpubkeyName(node);
        if(node.getFuncName() != null)
        {
            node.getFuncName().apply(this);
        }
        outAFuncSenderpubkeyName(node);
    }

    public void inASimpleSenderaddressName(ASimpleSenderaddressName node)
    {
        defaultIn(node);
    }

    public void outASimpleSenderaddressName(ASimpleSenderaddressName node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleSenderaddressName(ASimpleSenderaddressName node)
    {
        inASimpleSenderaddressName(node);
        if(node.getName() != null)
        {
            node.getName().apply(this);
        }
        outASimpleSenderaddressName(node);
    }

    public void inAFuncSenderaddressName(AFuncSenderaddressName node)
    {
        defaultIn(node);
    }

    public void outAFuncSenderaddressName(AFuncSenderaddressName node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAFuncSenderaddressName(AFuncSenderaddressName node)
    {
        inAFuncSenderaddressName(node);
        if(node.getFuncName() != null)
        {
            node.getFuncName().apply(this);
        }
        outAFuncSenderaddressName(node);
    }

    public void inADigisimpleDigitalsignatureName(ADigisimpleDigitalsignatureName node)
    {
        defaultIn(node);
    }

    public void outADigisimpleDigitalsignatureName(ADigisimpleDigitalsignatureName node)
    {
        defaultOut(node);
    }

    @Override
    public void caseADigisimpleDigitalsignatureName(ADigisimpleDigitalsignatureName node)
    {
        inADigisimpleDigitalsignatureName(node);
        if(node.getName() != null)
        {
            node.getName().apply(this);
        }
        outADigisimpleDigitalsignatureName(node);
    }

    public void inADigifuncDigitalsignatureName(ADigifuncDigitalsignatureName node)
    {
        defaultIn(node);
    }

    public void outADigifuncDigitalsignatureName(ADigifuncDigitalsignatureName node)
    {
        defaultOut(node);
    }

    @Override
    public void caseADigifuncDigitalsignatureName(ADigifuncDigitalsignatureName node)
    {
        inADigifuncDigitalsignatureName(node);
        if(node.getFuncName() != null)
        {
            node.getFuncName().apply(this);
        }
        outADigifuncDigitalsignatureName(node);
    }

    public void inASimpleInassetsList(ASimpleInassetsList node)
    {
        defaultIn(node);
    }

    public void outASimpleInassetsList(ASimpleInassetsList node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleInassetsList(ASimpleInassetsList node)
    {
        inASimpleInassetsList(node);
        if(node.getInputAssetName() != null)
        {
            node.getInputAssetName().apply(this);
        }
        outASimpleInassetsList(node);
    }

    public void inAListInassetsList(AListInassetsList node)
    {
        defaultIn(node);
    }

    public void outAListInassetsList(AListInassetsList node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAListInassetsList(AListInassetsList node)
    {
        inAListInassetsList(node);
        if(node.getInputAssetName() != null)
        {
            node.getInputAssetName().apply(this);
        }
        if(node.getComma() != null)
        {
            node.getComma().apply(this);
        }
        if(node.getInassetsList() != null)
        {
            node.getInassetsList().apply(this);
        }
        outAListInassetsList(node);
    }

    public void inASimpleOutassetsList(ASimpleOutassetsList node)
    {
        defaultIn(node);
    }

    public void outASimpleOutassetsList(ASimpleOutassetsList node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleOutassetsList(ASimpleOutassetsList node)
    {
        inASimpleOutassetsList(node);
        if(node.getOutputAssetName() != null)
        {
            node.getOutputAssetName().apply(this);
        }
        outASimpleOutassetsList(node);
    }

    public void inAListOutassetsList(AListOutassetsList node)
    {
        defaultIn(node);
    }

    public void outAListOutassetsList(AListOutassetsList node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAListOutassetsList(AListOutassetsList node)
    {
        inAListOutassetsList(node);
        if(node.getOutputAssetName() != null)
        {
            node.getOutputAssetName().apply(this);
        }
        if(node.getComma() != null)
        {
            node.getComma().apply(this);
        }
        if(node.getOutassetsList() != null)
        {
            node.getOutassetsList().apply(this);
        }
        outAListOutassetsList(node);
    }

    public void inASimpleInputAssetName(ASimpleInputAssetName node)
    {
        defaultIn(node);
    }

    public void outASimpleInputAssetName(ASimpleInputAssetName node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleInputAssetName(ASimpleInputAssetName node)
    {
        inASimpleInputAssetName(node);
        if(node.getName() != null)
        {
            node.getName().apply(this);
        }
        outASimpleInputAssetName(node);
    }

    public void inASimpleOutputAssetName(ASimpleOutputAssetName node)
    {
        defaultIn(node);
    }

    public void outASimpleOutputAssetName(ASimpleOutputAssetName node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleOutputAssetName(ASimpleOutputAssetName node)
    {
        inASimpleOutputAssetName(node);
        if(node.getName() != null)
        {
            node.getName().apply(this);
        }
        outASimpleOutputAssetName(node);
    }

    public void inASimpleInputassetSt(ASimpleInputassetSt node)
    {
        defaultIn(node);
    }

    public void outASimpleInputassetSt(ASimpleInputassetSt node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleInputassetSt(ASimpleInputassetSt node)
    {
        inASimpleInputassetSt(node);
        if(node.getInputassetStereotype() != null)
        {
            node.getInputassetStereotype().apply(this);
        }
        if(node.getAssetRef() != null)
        {
            node.getAssetRef().apply(this);
        }
        if(node.getOpenCurly() != null)
        {
            node.getOpenCurly().apply(this);
        }
        if(node.getDataClause() != null)
        {
            node.getDataClause().apply(this);
        }
        if(node.getProvenanceAddClause() != null)
        {
            node.getProvenanceAddClause().apply(this);
        }
        if(node.getCloseCurly() != null)
        {
            node.getCloseCurly().apply(this);
        }
        outASimpleInputassetSt(node);
    }

    public void inASimpleProvenanceAddClause(ASimpleProvenanceAddClause node)
    {
        defaultIn(node);
    }

    public void outASimpleProvenanceAddClause(ASimpleProvenanceAddClause node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleProvenanceAddClause(ASimpleProvenanceAddClause node)
    {
        inASimpleProvenanceAddClause(node);
        if(node.getComma() != null)
        {
            node.getComma().apply(this);
        }
        if(node.getProvenanceTaggedtok() != null)
        {
            node.getProvenanceTaggedtok().apply(this);
        }
        if(node.getEquals() != null)
        {
            node.getEquals().apply(this);
        }
        if(node.getTransactionRef() != null)
        {
            node.getTransactionRef().apply(this);
        }
        outASimpleProvenanceAddClause(node);
    }

    public void inASimpleTransactionRef(ASimpleTransactionRef node)
    {
        defaultIn(node);
    }

    public void outASimpleTransactionRef(ASimpleTransactionRef node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleTransactionRef(ASimpleTransactionRef node)
    {
        inASimpleTransactionRef(node);
        if(node.getName() != null)
        {
            node.getName().apply(this);
        }
        outASimpleTransactionRef(node);
    }

    public void inASimpleOutputassetSt(ASimpleOutputassetSt node)
    {
        defaultIn(node);
    }

    public void outASimpleOutputassetSt(ASimpleOutputassetSt node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleOutputassetSt(ASimpleOutputassetSt node)
    {
        inASimpleOutputassetSt(node);
        if(node.getOutputassetStereotype() != null)
        {
            node.getOutputassetStereotype().apply(this);
        }
        if(node.getAssetRef() != null)
        {
            node.getAssetRef().apply(this);
        }
        if(node.getOpenCurly() != null)
        {
            node.getOpenCurly().apply(this);
        }
        if(node.getDataClause() != null)
        {
            node.getDataClause().apply(this);
        }
        if(node.getC0() != null)
        {
            node.getC0().apply(this);
        }
        if(node.getRecAddressClause() != null)
        {
            node.getRecAddressClause().apply(this);
        }
        if(node.getConditionClause() != null)
        {
            node.getConditionClause().apply(this);
        }
        if(node.getCloseCurly() != null)
        {
            node.getCloseCurly().apply(this);
        }
        outASimpleOutputassetSt(node);
    }

    public void inASimpleAssetRef(ASimpleAssetRef node)
    {
        defaultIn(node);
    }

    public void outASimpleAssetRef(ASimpleAssetRef node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleAssetRef(ASimpleAssetRef node)
    {
        inASimpleAssetRef(node);
        if(node.getName() != null)
        {
            node.getName().apply(this);
        }
        outASimpleAssetRef(node);
    }

    public void inASimpleDataClause(ASimpleDataClause node)
    {
        defaultIn(node);
    }

    public void outASimpleDataClause(ASimpleDataClause node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleDataClause(ASimpleDataClause node)
    {
        inASimpleDataClause(node);
        if(node.getDataTaggedtok() != null)
        {
            node.getDataTaggedtok().apply(this);
        }
        if(node.getEquals() != null)
        {
            node.getEquals().apply(this);
        }
        if(node.getDataPayload() != null)
        {
            node.getDataPayload().apply(this);
        }
        outASimpleDataClause(node);
    }

    public void inASimpleDataPayload(ASimpleDataPayload node)
    {
        defaultIn(node);
    }

    public void outASimpleDataPayload(ASimpleDataPayload node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleDataPayload(ASimpleDataPayload node)
    {
        inASimpleDataPayload(node);
        if(node.getOpaqueexpr() != null)
        {
            node.getOpaqueexpr().apply(this);
        }
        outASimpleDataPayload(node);
    }

    public void inASimpleRecAddressClause(ASimpleRecAddressClause node)
    {
        defaultIn(node);
    }

    public void outASimpleRecAddressClause(ASimpleRecAddressClause node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleRecAddressClause(ASimpleRecAddressClause node)
    {
        inASimpleRecAddressClause(node);
        if(node.getReceiverTaggedtok() != null)
        {
            node.getReceiverTaggedtok().apply(this);
        }
        if(node.getEquals() != null)
        {
            node.getEquals().apply(this);
        }
        if(node.getParticipantRef() != null)
        {
            node.getParticipantRef().apply(this);
        }
        outASimpleRecAddressClause(node);
    }

    public void inASimpleConditionClause(ASimpleConditionClause node)
    {
        defaultIn(node);
    }

    public void outASimpleConditionClause(ASimpleConditionClause node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleConditionClause(ASimpleConditionClause node)
    {
        inASimpleConditionClause(node);
        if(node.getComma() != null)
        {
            node.getComma().apply(this);
        }
        if(node.getConditionTaggedtok() != null)
        {
            node.getConditionTaggedtok().apply(this);
        }
        if(node.getEquals() != null)
        {
            node.getEquals().apply(this);
        }
        if(node.getConditionPayload() != null)
        {
            node.getConditionPayload().apply(this);
        }
        outASimpleConditionClause(node);
    }

    public void inASimpleConditionPayload(ASimpleConditionPayload node)
    {
        defaultIn(node);
    }

    public void outASimpleConditionPayload(ASimpleConditionPayload node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleConditionPayload(ASimpleConditionPayload node)
    {
        inASimpleConditionPayload(node);
        if(node.getOpaqueexpr() != null)
        {
            node.getOpaqueexpr().apply(this);
        }
        outASimpleConditionPayload(node);
    }

    public void inASimpleParticipantRef(ASimpleParticipantRef node)
    {
        defaultIn(node);
    }

    public void outASimpleParticipantRef(ASimpleParticipantRef node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleParticipantRef(ASimpleParticipantRef node)
    {
        inASimpleParticipantRef(node);
        if(node.getName() != null)
        {
            node.getName().apply(this);
        }
        outASimpleParticipantRef(node);
    }

    public void inASimpleName(ASimpleName node)
    {
        defaultIn(node);
    }

    public void outASimpleName(ASimpleName node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleName(ASimpleName node)
    {
        inASimpleName(node);
        if(node.getCharSeq() != null)
        {
            node.getCharSeq().apply(this);
        }
        outASimpleName(node);
    }

    public void inASimpleFuncName(ASimpleFuncName node)
    {
        defaultIn(node);
    }

    public void outASimpleFuncName(ASimpleFuncName node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASimpleFuncName(ASimpleFuncName node)
    {
        inASimpleFuncName(node);
        if(node.getName() != null)
        {
            node.getName().apply(this);
        }
        if(node.getOpenRound() != null)
        {
            node.getOpenRound().apply(this);
        }
        if(node.getCloseRound() != null)
        {
            node.getCloseRound().apply(this);
        }
        outASimpleFuncName(node);
    }

    public void inANestedFuncName(ANestedFuncName node)
    {
        defaultIn(node);
    }

    public void outANestedFuncName(ANestedFuncName node)
    {
        defaultOut(node);
    }

    @Override
    public void caseANestedFuncName(ANestedFuncName node)
    {
        inANestedFuncName(node);
        if(node.getName() != null)
        {
            node.getName().apply(this);
        }
        if(node.getOpenRound() != null)
        {
            node.getOpenRound().apply(this);
        }
        if(node.getFuncName() != null)
        {
            node.getFuncName().apply(this);
        }
        if(node.getCloseRound() != null)
        {
            node.getCloseRound().apply(this);
        }
        outANestedFuncName(node);
    }
}
