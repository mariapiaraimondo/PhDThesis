/* This file was generated by SableCC (http://www.sablecc.org/). */

package protocol.analysis;

import java.util.*;
import protocol.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADataDataCondition(ADataDataCondition node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAConditionDataCondition(AConditionDataCondition node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleDataClause(ASimpleDataClause node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListDataClause(AListDataClause node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListDataExpression(AListDataExpression node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleAtomicList(ASimpleAtomicList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListAtomicList(AListAtomicList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariableArgument(AVariableArgument node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFunctionArgument(AFunctionArgument node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARecursiveArgument(ARecursiveArgument node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyFunction(AEmptyFunction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAHashFunction(AHashFunction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdFunction(AIdFunction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFreshFunction(AFreshFunction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPubkeyFunction(APubkeyFunction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASignatureFunction(ASignatureFunction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPubkeyDataFunction(APubkeyDataFunction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASignatureDataFunction(ASignatureDataFunction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleIdClause(ASimpleIdClause node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleFreshClause(ASimpleFreshClause node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleHashClause(ASimpleHashClause node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplePubkeyClause(ASimplePubkeyClause node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleSignatureClause(ASimpleSignatureClause node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASecretConditionClause(ASecretConditionClause node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWauthConditionClause(AWauthConditionClause node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleSecretClause(ASimpleSecretClause node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleWeakauthClause(ASimpleWeakauthClause node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleSecretPeer(ASimpleSecretPeer node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleWeakActor(ASimpleWeakActor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleWeakSubject(ASimpleWeakSubject node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleNumber(ASimpleNumber node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleName(ASimpleName node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOpenRound(TOpenRound node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCloseRound(TCloseRound node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOpenSquare(TOpenSquare node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCloseSquare(TCloseSquare node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOpenCurly(TOpenCurly node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCloseCurly(TCloseCurly node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFreshTok(TFreshTok node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdTok(TIdTok node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEmptyTok(TEmptyTok node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPubkeyTok(TPubkeyTok node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTHashTok(THashTok node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSignatureTok(TSignatureTok node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWeakauthTok(TWeakauthTok node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSecretTok(TSecretTok node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDigitSeq(TDigitSeq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCharSeq(TCharSeq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgn(TIgn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNewLine(TNewLine node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
